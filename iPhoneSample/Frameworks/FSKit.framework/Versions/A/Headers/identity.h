//
// This code was generated by Enunciate.
// http://enunciate.codehaus.org/
//
#import <libxml/xmlwriter.h>
#import <libxml/xmlreader.h>
#import <Foundation/Foundation.h>
#import "enunciate_common.h"
#import "fsv1.h"

#ifndef DEBUG_ENUNCIATE
//turn off enunciate debugging.
#define DEBUG_ENUNCIATE 2
#endif


/**
 * (no documentation provided)
 */
enum FSIDENTITYV2AAuthenticationStatus
{

  /**
   * (no documentation provided)
   */
  IDENTITY_IDENTITY_V2_AUTHENTICATIONSTATUS_SUCCESS,

  /**
   * (no documentation provided)
   */
  IDENTITY_IDENTITY_V2_AUTHENTICATIONSTATUS_FAILURE,

  /**
   * (no documentation provided)
   */
  IDENTITY_IDENTITY_V2_AUTHENTICATIONSTATUS_RESOLUTION_REQUIRED,

  /**
   * (no documentation provided)
   */
  IDENTITY_IDENTITY_V2_AUTHENTICATIONSTATUS_INVALID_KEY,

  /**
   * (no documentation provided)
   */
  IDENTITY_IDENTITY_V2_AUTHENTICATIONSTATUS_OTHER
};

/**
 * Reads a AuthenticationStatus from XML. The reader is assumed to be at the start element.
 *
 * @param reader The XML reader.
 * @return The AuthenticationStatus, or NULL if unable to be read.
 */
static enum FSIDENTITYV2AAuthenticationStatus *xmlTextReaderReadFSIDENTITYV2AAuthenticationStatusType(xmlTextReaderPtr reader);

/**
 * Writes a AuthenticationStatus to XML.
 *
 * @param writer The XML writer.
 * @param _authenticationStatus The AuthenticationStatus to write.
 * @return The bytes written (may be 0 in case of buffering) or -1 in case of error.
 */
static int xmlTextWriterWriteFSIDENTITYV2AAuthenticationStatusType(xmlTextWriterPtr writer, enum FSIDENTITYV2AAuthenticationStatus *_authenticationStatus);

@class FSIDENTITYV2ASession;
@class FSIDENTITYV2AAuthentication;
@class FSIDENTITYV2AUserPermission;
@class FSIDENTITYV2AUser;
@class FSIDENTITYV2ASessionValue;
@class FSIDENTITYV1Session;
@class FSV1BasicProperty;
@class FSV1BasicError;
@class FSV1BasicElement;
@class FSIDENTITYV2AIdentityStatus;
@class FSIDENTITYV2AIdentityProperty;
@class FSIDENTITYV1Identity;
@class FSIDENTITYV2AIdentity;


/**
 * (no documentation provided)
 */
@interface FSIDENTITYV2ASession : NSObject
{
  @private
    NSString *_id;
    NSArray *_values;
}

/**
 * session id.
 */
- (NSString *) id;

/**
 * session id.
 */
- (void) setId: (NSString *) newId;

/**
 * session values.
 */
- (NSArray *) values;

/**
 * session values.
 */
- (void) setValues: (NSArray *) newValues;
@end /* interface FSIDENTITYV2ASession */

/**
 * (no documentation provided)
 */
@interface FSIDENTITYV2AAuthentication : NSObject
{
  @private
    enum FSIDENTITYV2AAuthenticationStatus *_status;
    NSString *_resolutionUri;
}

/**
 * authentication status.
 */
- (enum FSIDENTITYV2AAuthenticationStatus *) status;

/**
 * authentication status.
 */
- (void) setStatus: (enum FSIDENTITYV2AAuthenticationStatus *) newStatus;

/**
 * authentication resolution URI.
 */
- (NSString *) resolutionUri;

/**
 * authentication resolution URI.
 */
- (void) setResolutionUri: (NSString *) newResolutionUri;
@end /* interface FSIDENTITYV2AAuthentication */

/**
 *  @author Rob Lyon

 */
@interface FSIDENTITYV2AUserPermission : NSObject
{
  @private
    NSString *_id;
    NSString *_name;
}

/**
 * (no documentation provided)
 */
- (NSString *) id;

/**
 * (no documentation provided)
 */
- (void) setId: (NSString *) newId;

/**
 * (no documentation provided)
 */
- (NSString *) name;

/**
 * (no documentation provided)
 */
- (void) setName: (NSString *) newName;
@end /* interface FSIDENTITYV2AUserPermission */

/**
 * (no documentation provided)
 */
@interface FSIDENTITYV2AUser : NSObject
{
  @private
    NSString *_id;
    NSString *_displayName;
    NSString *_email;
}

/**
 * (no documentation provided)
 */
- (NSString *) id;

/**
 * (no documentation provided)
 */
- (void) setId: (NSString *) newId;

/**
 * (no documentation provided)
 */
- (NSString *) displayName;

/**
 * (no documentation provided)
 */
- (void) setDisplayName: (NSString *) newDisplayName;

/**
 * (no documentation provided)
 */
- (NSString *) email;

/**
 * (no documentation provided)
 */
- (void) setEmail: (NSString *) newEmail;
@end /* interface FSIDENTITYV2AUser */

/**
 * (no documentation provided)
 */
@interface FSIDENTITYV2ASessionValue : NSObject
{
  @private
    NSString *_name;
    NSString *_value;
}

/**
 * session value name.
 */
- (NSString *) name;

/**
 * session value name.
 */
- (void) setName: (NSString *) newName;

/**
 * session value value.
 */
- (NSString *) value;

/**
 * session value value.
 */
- (void) setValue: (NSString *) newValue;
@end /* interface FSIDENTITYV2ASessionValue */

/**
 *  A identity session.

 @author Rob Lyon

 */
@interface FSIDENTITYV1Session : NSObject
{
  @private
    NSString *_id;
}

/**
 * The id of the session.
 */
- (NSString *) id;

/**
 * The id of the session.
 */
- (void) setId: (NSString *) newId;
@end /* interface FSIDENTITYV1Session */


/**
 *  @author Ryan Heaton

 */
@interface FSIDENTITYV2AIdentityStatus : NSObject
{
  @private
    int _code;
    int *_subcode;
    NSString *_message;
    NSString *_details;
}

/**
 * (no documentation provided)
 */
- (int) code;

/**
 * (no documentation provided)
 */
- (void) setCode: (int) newCode;

/**
 * (no documentation provided)
 */
- (int *) subcode;

/**
 * (no documentation provided)
 */
- (void) setSubcode: (int *) newSubcode;

/**
 * (no documentation provided)
 */
- (NSString *) message;

/**
 * (no documentation provided)
 */
- (void) setMessage: (NSString *) newMessage;

/**
 * (no documentation provided)
 */
- (NSString *) details;

/**
 * (no documentation provided)
 */
- (void) setDetails: (NSString *) newDetails;
@end /* interface FSIDENTITYV2AIdentityStatus */

/**
 *  @author Ryan Heaton

 */
@interface FSIDENTITYV2AIdentityProperty : NSObject
{
  @private
    NSString *_name;
    NSString *_value;
}

/**
 * (no documentation provided)
 */
- (NSString *) name;

/**
 * (no documentation provided)
 */
- (void) setName: (NSString *) newName;

/**
 * (no documentation provided)
 */
- (NSString *) value;

/**
 * (no documentation provided)
 */
- (void) setValue: (NSString *) newValue;
@end /* interface FSIDENTITYV2AIdentityProperty */

/**
 *  @author Ryan Heaton

 */
@interface FSIDENTITYV1Identity : FSV1BasicElement <EnunciateXML>
{
  @private
    FSIDENTITYV1Session *_session;
}

/**
 * The session associated with the identity.
 */
- (FSIDENTITYV1Session *) session;

/**
 * The session associated with the identity.
 */
- (void) setSession: (FSIDENTITYV1Session *) newSession;
@end /* interface FSIDENTITYV1Identity */

/**
 *  @author Brian Pugh

 */
@interface FSIDENTITYV2AIdentity : NSObject <EnunciateXML>
{
  @private
    int *_statusCode;
    BOOL *_deprecated;
    NSString *_statusMessage;
    NSString *_version;
    FSIDENTITYV2AAuthentication *_authentication;
    FSIDENTITYV2ASession *_session;
    NSArray *_status;
    NSArray *_users;
    NSArray *_properties;
    NSArray *_permissions;
}

/**
 * (no documentation provided)
 */
- (int *) statusCode;

/**
 * (no documentation provided)
 */
- (void) setStatusCode: (int *) newStatusCode;

/**
 * (no documentation provided)
 */
- (BOOL *) deprecated;

/**
 * (no documentation provided)
 */
- (void) setDeprecated: (BOOL *) newDeprecated;

/**
 * (no documentation provided)
 */
- (NSString *) statusMessage;

/**
 * (no documentation provided)
 */
- (void) setStatusMessage: (NSString *) newStatusMessage;

/**
 * (no documentation provided)
 */
- (NSString *) version;

/**
 * (no documentation provided)
 */
- (void) setVersion: (NSString *) newVersion;

/**
 * authentication information.
 */
- (FSIDENTITYV2AAuthentication *) authentication;

/**
 * authentication information.
 */
- (void) setAuthentication: (FSIDENTITYV2AAuthentication *) newAuthentication;

/**
 * session information.
 */
- (FSIDENTITYV2ASession *) session;

/**
 * session information.
 */
- (void) setSession: (FSIDENTITYV2ASession *) newSession;

/**
 * The status list.
 */
- (NSArray *) status;

/**
 * The status list.
 */
- (void) setStatus: (NSArray *) newStatus;

/**
 * users.
 */
- (NSArray *) users;

/**
 * users.
 */
- (void) setUsers: (NSArray *) newUsers;

/**
 * The properties.
 */
- (NSArray *) properties;

/**
 * The properties.
 */
- (void) setProperties: (NSArray *) newProperties;

/**
 * permissions.
 */
- (NSArray *) permissions;

/**
 * permissions.
 */
- (void) setPermissions: (NSArray *) newPermissions;
@end /* interface FSIDENTITYV2AIdentity */

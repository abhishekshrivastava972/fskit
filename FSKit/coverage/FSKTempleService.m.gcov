        -:    0:Source:/Users/logan/Projects/FSKit/Source/FSKTempleService.m
        -:    0:Graph:/Users/logan/Projects/builds/FSKit.build/Coverage/FSKit.build/Objects-normal/ppc/FSKTempleService.gcno
        -:    0:Data:/Users/logan/Projects/builds/FSKit.build/Coverage/FSKit.build/Objects-normal/ppc/FSKTempleService.gcda
        -:    0:Runs:6
        -:    0:Programs:1
        -:    1://
        -:    2://  TempleService.m
        -:    3://  FSKit
        -:    4://
        -:    5://  Created by Logan Allred on 9/16/07.
        -:    6://  Copyright 2008 Logan Allred. All rights reserved.
        -:    7://
        -:    8:
        -:    9:#import "FSKTempleService.h"
        -:   10:#import "FSKConnection.h"
        -:   11:
        -:   12:
        -:   13:@implementation FSKTempleService
        -:   14:
        -:   15:+(FSKTempleService *)templeServiceWithConnection:(FSKConnection *)connection
    #####:   16:{
    #####:   17:	return [[[FSKTempleService alloc] initWithConnection:connection] autorelease];
        -:   18:}
        -:   19:
        -:   20:-(id)initWithConnection:(FSKConnection *)familySearchConnection
    #####:   21:{
    #####:   22:	self = [super init];
    #####:   23:	moduleName = @"temple";
    #####:   24:	versionString = @"v1";
        -:   25:
    #####:   26:	connection = familySearchConnection;
        -:   27:	
    #####:   28:	return self;
        -:   29:}
        -:   30:
    #####:   31:- (NSArray *)fetchTempleList{
    #####:   32:	NSURL *myURL = [NSURL URLWithString:[NSString stringWithFormat:@"%@/temple/v1/temple/%@", FSAPIServerUrlString, @""]];
    #####:   33:	NSLog(@"url: %@", myURL);
    #####:   34:	NSError* err = nil;
    #####:   35:	NSXMLDocument *doc=[[NSXMLDocument alloc] initWithContentsOfURL:myURL options:nil error:&err];
    #####:   36:	if (err) {
    #####:   37:		NSLog(@"Error: %@", err);
        -:   38:	}
    #####:   39:	NSLog(@"\n%@",[doc XMLStringWithOptions:NSXMLNodePrettyPrint]);	
    #####:   40:	NSLog(@"temple nodes: %@", [doc nodesForXPath:@"//temples/temple" error:&err]);
    #####:   41:		if (err) {
    #####:   42:			NSLog(@"Error: %@", err);
        -:   43:		}
        -:   44:		
    #####:   45:		return [doc nodesForXPath:@"//temples/temple" error:nil];
        -:   46://	return [NSArray arrayWithObjects:@"first", @"second", nil];
        -:   47:}
    #####:   48:- (NSXMLNode *)fetchTempleWithCode:(NSString *)code {
    #####:   49:	NSURL *myURL = [NSURL URLWithString:[NSString stringWithFormat:@"%@/temple/v1/temple/%@", FSAPIServerUrlString, code]];
    #####:   50:	NSLog(@"url: %@", myURL);
    #####:   51:	NSError* err = nil;
    #####:   52:	NSXMLDocument *doc=[[NSXMLDocument alloc] initWithContentsOfURL:myURL options:nil error:&err];
    #####:   53:	if (err) {
    #####:   54:		NSLog(@"Error: %@", err);
        -:   55:	}
    #####:   56:	NSLog(@"\n%@",[doc XMLStringWithOptions:NSXMLNodePrettyPrint]);	
        -:   57:	
    #####:   58:	return [[doc nodesForXPath:@"//temples/temple" error:nil] lastObject];
        -:   59:								//	return [NSArray arrayWithObjects:@"first", @"second", nil];
        -:   60:}
        -:   61:
        -:   62:-(void) requestFinished:(NSXMLElement *)response
    #####:   63:{
    #####:   64:	NSLog(@"%s %@", __PRETTY_FUNCTION__, response);
        -:   65:}
        -:   66:
        -:   67:-(void) requestFailed:(NSError *)error
    #####:   68:{
    #####:   69:	NSLog(@"%s %@", __PRETTY_FUNCTION__, error);
        -:   70:}
        -:   71:
        -:   72:
        -:   73:@end
